# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define the job to test the Java project
jobs:
  test-java:
    # Specify the execution environment using a CircleCI convenience Docker image for Java.
    docker:
      - image: circleci/openjdk:17-jdk-bullseye # Use the appropriate JDK version

    # Add steps to execute within the job
    steps:
      - checkout # Checkout the code from the repository

      # Restore dependencies cache
      - restore_cache:
          keys:
            - gradle-cache-v1-{{ checksum "build.gradle" }}
            - gradle-cache-v1-

      # Run Gradle commands to build and test the project
      - run:
          name: Build Project
          command: ./gradlew build

      - run:
          name: Run Tests
          command: ./gradlew test

      # Save dependencies cache
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: gradle-cache-v1-{{ checksum "build.gradle" }}

      # Store test results for CircleCI Test Summary
      - store_test_results:
          path: build/test-results/test

      # Store build artifacts (e.g., JAR files or logs)
      - store_artifacts:
          path: build/libs

# Define the workflow to orchestrate the job
workflows:
  test-java-workflow:
    jobs:
      - test-java
